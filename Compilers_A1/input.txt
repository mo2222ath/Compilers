{ Sample program
  in TINY language
  compute factorial
  ---- Test Cases ----
}

{---------------------------------------------------
#####(5&3)

Start main()
Symbol Table:
[Var=x][Mem=0][Line=32][Line=33]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Num][5][Integer]
      [Num][3][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 2
---------------------------------
End main()
-----------------------------------------------------}
{----------------------------------------------------
#####(3&2)

Start main()
Symbol Table:
[Var=x][Mem=0][Line=52][Line=53]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Num][3][Integer]
      [Num][2][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 1
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 3+5&8

Start main()
Symbol Table:
[Var=x][Mem=0][Line=412][Line=413]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Plus][Integer]
      [Num][3][Integer]
      [Oper][AbsDif][Integer]
         [Num][5][Integer]
         [Num][8][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 6
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 3&3-1

Start main()
Symbol Table:
[Var=x][Mem=0][Line=393][Line=394]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][AbsDif][Integer]
         [Num][3][Integer]
         [Num][3][Integer]
      [Num][1][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: -1
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 2&8-5&7

Start main()
Symbol Table:
[Var=x][Mem=0][Line=372][Line=373]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][AbsDif][Integer]
         [Num][2][Integer]
         [Num][8][Integer]
      [Oper][AbsDif][Integer]
         [Num][5][Integer]
         [Num][7][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 4
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 1&4*1

Start main()
Symbol Table:
[Var=x][Mem=0][Line=353][Line=354]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Num][1][Integer]
      [Oper][Times][Integer]
         [Num][4][Integer]
         [Num][1][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 3
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 1&1&7^2^4

Start main()
Symbol Table:
[Var=x][Mem=0][Line=330][Line=331]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Oper][AbsDif][Integer]
         [Num][1][Integer]
         [Num][1][Integer]
      [Oper][Power][Integer]
         [Num][7][Integer]
         [Oper][Power][Integer]
            [Num][2][Integer]
            [Num][4][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 1526366847
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 1+4&4&7

Start main()
Symbol Table:
[Var=x][Mem=0][Line=309][Line=310]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Plus][Integer]
      [Num][1][Integer]
      [Oper][AbsDif][Integer]
         [Oper][AbsDif][Integer]
            [Num][4][Integer]
            [Num][4][Integer]
         [Num][7][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 8
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 4&4-4

Start main()
Symbol Table:
[Var=x][Mem=0][Line=290][Line=291]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][AbsDif][Integer]
         [Num][4][Integer]
         [Num][4][Integer]
      [Num][4][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: -4
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 4-4&4

Start main()
Symbol Table:
[Var=x][Mem=0][Line=271][Line=272]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Num][4][Integer]
      [Oper][AbsDif][Integer]
         [Num][4][Integer]
         [Num][4][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 4
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 2/1&4^1

Start main()
Symbol Table:
[Var=x][Mem=0][Line=249][Line=250]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Oper][Divide][Integer]
         [Num][2][Integer]
         [Num][1][Integer]
      [Oper][Power][Integer]
         [Num][4][Integer]
         [Num][1][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 2
---------------------------------
End main()

------------------------------------------------------}
{-----------------------------------------------------
#### 5*2&4/8

Start main()
Symbol Table:
[Var=x][Mem=0][Line=228][Line=229]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][AbsDif][Integer]
      [Oper][Times][Integer]
         [Num][5][Integer]
         [Num][2][Integer]
      [Oper][Divide][Integer]
         [Num][4][Integer]
         [Num][8][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 10
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 5-3&2-4

Start main()
Symbol Table:
[Var=x][Mem=0][Line=207][Line=208]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][Minus][Integer]
         [Num][5][Integer]
         [Oper][AbsDif][Integer]
            [Num][3][Integer]
            [Num][2][Integer]
      [Num][4][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 0
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 5&3+2^2

Start main()
Symbol Table:
[Var=x][Mem=0][Line=186][Line=187]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Plus][Integer]
      [Oper][AbsDif][Integer]
         [Num][5][Integer]
         [Num][3][Integer]
      [Oper][Power][Integer]
         [Num][2][Integer]
         [Num][2][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 6
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 5&2-4*2
Start main()
Symbol Table:
[Var=x][Mem=0][Line=166][Line=167]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][AbsDif][Integer]
         [Num][5][Integer]
         [Num][2][Integer]
      [Oper][Times][Integer]
         [Num][4][Integer]
         [Num][2][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: -5
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 2+4&7/7*3

Start main()
Symbol Table:
[Var=x][Mem=0][Line=142][Line=143]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Plus][Integer]
      [Num][2][Integer]
      [Oper][AbsDif][Integer]
         [Num][4][Integer]
         [Oper][Times][Integer]
            [Oper][Divide][Integer]
               [Num][7][Integer]
               [Num][7][Integer]
            [Num][3][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 3
---------------------------------
End main()

------------------------------------------------------}
{-----------------------------------------------------
#### 1*2-4&4

Start main()
Symbol Table:
[Var=x][Mem=0][Line=121][Line=122]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][Minus][Integer]
      [Oper][Times][Integer]
         [Num][1][Integer]
         [Num][2][Integer]
      [Oper][AbsDif][Integer]
         [Num][4][Integer]
         [Num][4][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 2
---------------------------------
End main()
------------------------------------------------------}
{-----------------------------------------------------
#### 1+3&4<1

Start main()
ERROR Assign works only for INTEGER
Symbol Table:
[Var=x][Mem=0][Line=98][Line=99]
---------------------------------
Syntax Tree:
[Assign][x]
   [Oper][LessThan][Boolean]
      [Oper][Plus][Integer]
         [Num][1][Integer]
         [Oper][AbsDif][Integer]
            [Num][3][Integer]
            [Num][4][Integer]
      [Num][1][Integer]
[Write]
   [ID][x][Integer]
---------------------------------
Run Program:
Val: 0
---------------------------------
End main()
------------------------------------------------------}

x:=3+5-1&3*5;
write x

