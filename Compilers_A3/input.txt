
{||||||||Test Cases|||||||||||}
{test 1}
sum:=0;
for i from 1 to n inc 2
startfor
sum:=sum+i;
if i=11 then break end
endfor;
write sum
;
{test 2}
for j from 1 to 10 inc 2
startfor
write j
endfor
;
{test 3}
for k from 10 to 1 inc 0-1
startfor
write k
endfor
;
{test 4}
for l from 1 to 10 inc 1
startfor
write l;
if l=2 then break end
endfor
;
{test 5}
for m from 7 to 1 inc 0-1
startfor
n:=2+5*m;
write n;
if m=6 then break end
endfor
;
{test 6}
for n from 1 to 1 inc 0
startfor
write n
endfor {will print nothing because 1 to 1}
;
{test 7}
x := 1;
for o from 16 to 1 inc 0-4
startfor
x := x * o + 1
endfor;
write x
;
{test 8}
for p from 5-4 to 110/11 inc 1+2
startfor
write p + 10
endfor
;
{test 9}
for q from 1 to 5 inc 1
startfor
if q=1 then
write 10;
if q=2 then
write 20;
if q=3 then
 write 30;
 break
end
end
end;
write q
endfor
;
{test 10}
for r from 1 to 4 inc 1
startfor
for s from 1 to 4 inc 1
startfor
write (r+1)*s
endfor
endfor

{
    |||||||||||| Output  |||||||||||

Start main()
Symbol Table:
[Var=i][Mem=1][Line=5][Line=7][Line=8]
[Var=j][Mem=3][Line=13][Line=15]
[Var=k][Mem=4][Line=19][Line=21]
[Var=l][Mem=5][Line=25][Line=27][Line=28]
[Var=m][Mem=6][Line=32][Line=34][Line=36]
[Var=n][Mem=2][Line=5][Line=34][Line=35][Line=40][Line=42]  
[Var=o][Mem=8][Line=47][Line=49]
[Var=p][Mem=9][Line=54][Line=56]
[Var=q][Mem=10][Line=60][Line=62][Line=64][Line=66][Line=72]
[Var=r][Mem=11][Line=76][Line=80]
[Var=s][Mem=12][Line=78][Line=80]
[Var=x][Mem=7][Line=46][Line=49][Line=49][Line=51]
[Var=sum][Mem=0][Line=4][Line=7][Line=7][Line=10]
---------------------------------
Syntax Tree:
[Assign][sum]
   [Num][0][Integer]
[For]
   [Num][1][Integer]
   [ID][n][Integer]
   [Num][2][Integer]
   [Assign][sum]
      [Oper][Plus][Integer]
         [ID][sum][Integer]
         [ID][i][Integer]
   [If]
      [Oper][Equal][Boolean]
         [ID][i][Integer]
         [Num][11][Integer]
      [Break]
[Write]
   [ID][sum][Integer]
[For]
   [Num][1][Integer]
   [Num][10][Integer]
   [Num][2][Integer]
   [Write]
      [ID][j][Integer]
[For]
   [Num][10][Integer]
   [Num][1][Integer]
   [Oper][Minus][Integer]
      [Num][0][Integer]
      [Num][1][Integer]
   [Write]
      [ID][k][Integer]
[For]
   [Num][1][Integer]
   [Num][10][Integer]
   [Num][1][Integer]
   [Write]
      [ID][l][Integer]
   [If]
      [Oper][Equal][Boolean]
         [ID][l][Integer]
         [Num][2][Integer]
      [Break]
[For]
   [Num][7][Integer]
   [Num][1][Integer]
   [Oper][Minus][Integer]
      [Num][0][Integer]
      [Num][1][Integer]
   [Assign][n]
      [Oper][Plus][Integer]
         [Num][2][Integer]
         [Oper][Times][Integer]
            [Num][5][Integer]
            [ID][m][Integer]
   [Write]
      [ID][n][Integer]
   [If]
      [Oper][Equal][Boolean]
         [ID][m][Integer]
         [Num][6][Integer]
      [Break]
[For]
   [Num][1][Integer]
   [Num][1][Integer]
   [Num][0][Integer]
   [Write]
      [ID][n][Integer]
[Assign][x]
   [Num][1][Integer]
[For]
   [Num][16][Integer]
   [Num][1][Integer]
   [Oper][Minus][Integer]
      [Num][0][Integer]
      [Num][4][Integer]
   [Assign][x]
      [Oper][Plus][Integer]
         [Oper][Times][Integer]
            [ID][x][Integer]
            [ID][o][Integer]
         [Num][1][Integer]
[Write]
   [ID][x][Integer]
[For]
   [Oper][Minus][Integer]
      [Num][5][Integer]
      [Num][4][Integer]
   [Oper][Divide][Integer]
      [Num][110][Integer]
      [Num][11][Integer]
   [Oper][Plus][Integer]
      [Num][1][Integer]
      [Num][2][Integer]
   [Write]
      [Oper][Plus][Integer]
         [ID][p][Integer]
         [Num][10][Integer]
[For]
   [Num][1][Integer]
   [Num][5][Integer]
   [Num][1][Integer]
   [If]
      [Oper][Equal][Boolean]
         [ID][q][Integer]
         [Num][1][Integer]
      [Write]
         [Num][10][Integer]
      [If]
         [Oper][Equal][Boolean]
            [ID][q][Integer]
            [Num][2][Integer]
         [Write]
            [Num][20][Integer]
         [If]
            [Oper][Equal][Boolean]
               [ID][q][Integer]
               [Num][3][Integer]
            [Write]
               [Num][30][Integer]
            [Break]
   [Write]
      [ID][q][Integer]
[For]
   [Num][1][Integer]
   [Num][4][Integer]
   [Num][1][Integer]
   [For]
      [Num][1][Integer]
      [Num][4][Integer]
      [Num][1][Integer]
      [Write]
         [Oper][Times][Integer]
            [Oper][Plus][Integer]
               [ID][r][Integer]
               [Num][1][Integer]
            [ID][s][Integer]
---------------------------------
Run Program:
Val: 36
Val: 1
Val: 3
Val: 5
Val: 7
Val: 9
Val: 10
Val: 9
Val: 8
Val: 7
Val: 6
Val: 5
Val: 4
Val: 3
Val: 2
Val: 1
Val: 2
Val: 37
Val: 32
Val: 6565
Val: 11
Val: 14
Val: 17
Val: 10
Val: 1
Val: 2
Val: 3
Val: 4
Val: 2
Val: 4
Val: 6
Val: 3
Val: 6
Val: 9
Val: 4
Val: 8
Val: 12
---------------------------------
End main()


}